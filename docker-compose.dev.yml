version: '3.8'

services:
  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: twingrid-api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/venv
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/twingrid
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - twingrid-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: twingrid-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - api
    networks:
      - twingrid-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: twingrid-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=twingrid
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - twingrid-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: twingrid-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - twingrid-network

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: twingrid-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - twingrid-network

  # MailHog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: twingrid-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - twingrid-network

networks:
  twingrid-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
